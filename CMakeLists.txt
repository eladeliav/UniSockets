cmake_minimum_required(VERSION 3.13)
project(UniSockets)

set(CMAKE_CXX_STANDARD 17)
set(
        JUST_HEADERS
        UniSocket.h
        UniSocketSet.h
        UnisocketException.h
)
set(
        SOURCE_FILES
        UniSocket.h
        UniSocket.cpp
        UniSocketSet.h
        UniSocketSet.cpp
        UniSocketException.cpp
)
if (WIN32)
    list(APPEND SOURCE_FILES
            "SocketWrapperWin.cpp"
            "SocketWrapperWin.h"
            "FDSetWrapperWin.h"
            "FDSetWrapperWin.cpp"
            )
    list(APPEND JUST_HEADERS
            "SocketWrapperWin.h"
            "FDSetWrapperWin.h"
        )
    set(OUTPUT_INCLUDE_DIR "D:/Programming/VisualStudioProjects/VariousIncludes/UniSockets/include/")
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "D:/Programming/VisualStudioProjects/VariousIncludes/UniSockets/lib/")
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "D:/Programming/VisualStudioProjects/VariousIncludes/UniSockets/lib/")
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "D:/Programming/VisualStudioProjects/VariousIncludes/UniSockets/lib/")
endif ()
if (UNIX)
    list(APPEND SOURCE_FILES
            "SocketWrapperLin.cpp"
            "SocketWrapperLin.h"
            "FDSetWrapperLin.h"
            "FDSetWrapperLin.cpp"
            )
    list(APPEND JUST_HEADERS
            "SocketWrapperLin.h"
            "FDSetWrapperLin.h"
        )
    set(OUTPUT_INCLUDE_DIR "/Users/eladeliav/Documents/Programming/C++/Various Includes/UniSockets/include/")
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "/Users/eladeliav/Documents/Programming/C++/VariousIncludes/UniSockets/lib/")
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "/Users/eladeliav/Documents/Programming/C++/VariousIncludes/UniSockets/lib/")
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "/Users/eladeliav/Documents/Programming/C++/VariousIncludes/UniSockets/lib/")
endif ()

message("include output: ${OUTPUT_INCLUDE_DIR}")
message("lib output: ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY}")
file(COPY ${JUST_HEADERS}
        DESTINATION ${OUTPUT_INCLUDE_DIR})

add_library(
        ${PROJECT_NAME}
        SHARED
        ${SOURCE_FILES}
)

#add_executable(${PROJECT_NAME} ${SOURCE_FILES} main.cpp)

if (WIN32)
    target_link_libraries(${PROJECT_NAME} ws2_32)
endif ()

